
[[questions]]
type = "Visualization"
prompt.program = """
fn main() {
    let x = 5;
    let y = x;
}
"""
prompt.prompt = """
Which of the following visulization matched the code provided?
"""
prompt.code1 = """![](/vis_code.svg)"""
prompt.viz1 = """![](/vis_timeline.svg)"""

prompt.viz2 = """![](/vis_timeline_wrong.svg)"""

prompt.choices = [
  "A",
  "B"
]

answer.answer = 1
context = """
See visualization for visible side effect.
"""


[[questions]]
type = "MultipleChoice"
prompt.prompt = """The string resource that a initially owns is dropped
between which two adjacent lines of output above?
"""
prompt.program = """
fn id(y : String) -> String {y}
fn f(x : String) -> i32 {
  println!("Hello, {}!", x);
  let z = id(x);
  println!("Goodbye, {}!", z);
  42
}
fn main() {
  println!("Welcome!");
  {
    let a = String::from("world");
    println!("Thinking...");
    let q = f(a);
    println!("The meaning of life is: {}.", q);
  }
  println!("Done.");
}
"""
prompt.choices = [
  "After Goodbye, world!.",
  "After The meaning of life is: 42",
  "After Done.",
  "After Welcome!"
]

answer.answer = 1
context = """
See visualization for visible side effect.
"""

[[questions]]
type = "ShortAnswer"
prompt.prompt = """Explain why by describing the events related to movement
and borrowing that occur in the code above.
"""
answer.answer = "mut"
context = """
For example, you can make a mutable variable `x` by writing: `let mut x = 1`.
"""

[[questions]]
type = "Tracing"
prompt.program = """
fn main() {
  let x = 1;
  println!("{x}");
  x += 1;
  println!("{x}");
}
"""
answer.doesCompile = false
answer.lineNumber = 4
context = """
This is a compiler error because line 4 tries to mutate `x` when `x` is not marked as `mut`.
"""
